@charset "utf-8";
@import url('https://necolas.github.io/normalize.css/latest/normalize.css');
@import url('https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css');
@import url('./fontello.css');
/* css의 규칙 처음에는 charset을 선언 */
*, *::before, *::after{
    box-sizing: border-box;
}
a{
    text-decoration: none; /*글자 선을 만들지 않는다. 하이퍼링크 밑줄 제거함*/
    color: inherit;
}
/*숨긴 콘텐츠*/
.a11y-hidden, legend{
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden; /* 넘치는 부분을 감쳐준다 */
    clip: rect(0,0,0,0); /* 선행조건 : position:absolute 해당 화면을 잘라내서 보여줌 */
    white-space: nowrap; /* 줄바꿈을 하지않음. */
    opacity: 0; /* 투명도  */
}
html{
    font-size: 10px;
}
body{
    font-size: 1.4rem;
    margin: 0;
    color: #181818;
    font-family: 'Spoqa Han Sans', 'Sans-serif';
    font-weight: 400;
    background: gray;
}
.header, .visual, .main-content, .slogan, .footer{ /*선택자의 그룹핑*/
    width: 940px;
    margin: 0 auto; /* auto는 남은영역을 계산해서 잘 나누어줌. */
}
.header{
    box-sizing: border-box;
    background-color: pink;
    position: relative;
    /* logo의 기준으로 삼기 위해서 */
    padding: 0px 30px 50px 30px;
}
/* 로고 */
.logo{
    margin: 0;
    /* float: left; */
    position: absolute;
    top: 45px;
    left: 70px;
        /* z-index: 10; */
    /* 
    자신보다 상위요소를 기준으로 배치하는법 
    단, 상위요소가 position:static;이 아니여야한다.
    만약 상위요소가 postion:static이라면 static이 아닌 상위요소를 찾을떄까지
    올라간다.
    : top,right,bottom,left */
}
/* 멤버링크 */
.member{
    /* 불릿제거 */
    /* display: flex;
    flex-drection: row;
    align-items: center;
    justify-content: flex-end; */
    list-style-type: none;  /* circle : 빈 동그라미 */
    margin: 0;
    padding : 2px 0;
    font-size: 0;
    /* member에 font size를 적용함으로써 공백을 삭제한다. */
    text-align: right;
    position: relative;
    right: -10px;
}
.member li{
    display: inline-block;
    /* flex-basis: 100px; */
    /* inline은 block과 다르게 줄바꿈이 안되고, width와 height가 적용되지 않는다. 오로지 적용된 글자 수에 따라서 크기가 결정된다. */
    font-size: 1.4rem;
    text-transform: uppercase; /*UpperCase 는 영어를 대문자로 변환함*/    
/* font-size에 rem을 적용함으로써 글씨크기를 살려냄 */
}
 /* .member li::before{
    background-color: orange;
    content: '\f142';
    font-family:'fontello';
}  *//* content: "가상요소 박스";     */
.member li:nth-child(n+2)::before{
    content: '\f142';
    font-family:'fontello';
    /* display: inline-block;
    margin: 0 .2em; */
}
/* .member li a 라고 주지말고 바로 a태그에 접근하라 */
.member a{
    padding : 8px 10px;
    display: inline-block;
}
/* 메인메뉴 */
.menu{
    background-color: #f7aa2e;
    background-image: linear-gradient(to bottom, #f4c730 0%,#f7aa2e 35%,#f7aa2e 70%,#f4c730 100%);
    /* background-image: linear-gradient(to bottom, red, green,red); 시작 빨간색 , 끝 - 녹색 */
    padding-left : 225px;
    margin: 5px 0 0 0;
    list-style: none;
    border-radius: 0 0 5px 5px;
    /* border-top: 2px solid #000; */
    box-shadow: 0 -2px 2px 0 black;
    /* height : 45px; */
    /* overflow: hidden; */
}
.menu::after{ 
    background-color: lime;
    content:"";
    clear: both; 
     /* clear는 display:block 에서만 사용 가능. */
    display: block;
 }
/* 
    menu에서 overflow를 사용했기 떄문에 주석처리하였음.
*/
.menu-item{
    position: relative;
    float: left;
    /* 콘텐트들이 위에 따닥따닥 붙어잇다. */
    /* height: 45px;  */
}
/* menu-after는 동적인 상황에 나와야할 스타일 */
.menu-act .btn-menu{
    color:#ff0 
    /* 
    선택자의 구체성 규칙. 
    important 지워도 됨. , 동적인것을 명시하기 위해 그대로둠.
    */
}
.btn-menu{
    height: 45px;
    line-height: 45px;
    border-left: 2px solid rgba(255,255,255, 0.5); 
    /* background-color: yellow; */
    display: block;
    padding : 0px 20px;
    font-weight: 700;
    font-size: 1.6rem;
    color: #fff;
    /* 텍스트 쉐도우를 이용하여 그림자 설정하기. */
    text-shadow: 1px 0 0 black, -1px 0 0 black, 0 1px 0 black, 0px -1px 0 black;
}
.menu-act .btn-menu{
    color: yellow   !important;
}
.menu-act .btn-menu::after{
    content : "";
    display: block; /*부모영역크기 만큼 독립적인 상자 생성*/
    border-top : 2px solid black;
}
.sub-menu{
    padding-left : 0;
    margin: 0;
    list-style: none;
    background-color: yellow;
    position: absolute;
    display: none;
    white-space: nowrap; 
    /* white-space : nowtap -> 강제로 개행 금지  */
     /* 임시 */
}
.sub-menu li, .sub-menu a{
    display: inline-block;
}
.sub-menu a{
    padding: 10px 0 ;
    margin-right: 10px;
}
.menu-act .sub-menu{
    display: block;
    top : 47px;
}
.sub-menu1, .sub-menu2, .sub-menu3{
    left: 0;
}
.sub-menu4, .sub-menu5, .sub-menu6{
    right: 0;
}
/* 비주얼 */
@keyframes text-ani{
    0%{
        font-size: 12px;
        color : rgba(0,0,0,0);
        /* top: 0;
        left: 0; */
        /* padddig : 75px 0 0 400px */
        /* margin : 0; */
        transform: translate(0,0);
    }        /* from */
    100%{
        font-size : 24px;
        color : rgba(0,0,0,1);
        transform: translate(400px,75px);
        /* top : 75px;
        left : 400px; */
        /* padding : 75px 0 0 400px */
        /* margin : 75px 0 0 400px; */
    }      /* to */
}
@keyframes bg-ani{
    0%{ opacity: 1; }
    100% { opacity: 0; }
}
.visual{
    background-color: lime;
    /* background: url(./images/bg_flower.png); */
    position: relative;
    height: 120px;
    /*  */
}
.visual::before, .visual::after{
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    /* animation-name: bg-ani;
    animation-duration: 2000ms;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: paused; */
    /* short 표기법 이름 듀레이션 딜레이 반복 방향 반복곡선도 */
    animation: bg-ani 2000ms  1000ms infinite alternate ease-in-out;
}
.visual::before{
    /* background-color: silver; */
    /*배경이미지는 거꾸로임*/
    /* background-image: url('./images/ani_flower_01.png'),url('./images/ani_flower_02.png');  */
    /* 모든 배경이미지 repeat 출력되고있다. */
    /* background-repeat: no-repeat; */
    /* 프로젝트 할 때는 이미지 여백을 주어서는 안된다. */
    /* background-position: 0 -10px, 670px 0;     */
    /* x축 y축 */
/* shortand 표기법 배경색은 마지막 요소 url 앞에 적어주어야한다. silver */
    background : url('./images//ani_flower_01.png') no-repeat 0 -10px,
                url('./images/ani_flower_02.png') no-repeat 670px 0;
    z-index: 10;
}
.visual::after{
    animation-delay: 1000ms;
    background : url('./images//ani_flower_03.png') no-repeat 300px 0,
    url('./images/ani_flower_04.png') no-repeat 800px 15px;
}
.visual-text{
    background-color: yellow;
    position: absolute;
    animation-name: text-ani; 
    animation-duration: 5s;
    animation-fill-mode: forwards;
    font-family: Georgia, 'Times New Roman', Times, serif;
}
.main-content{
    min-height: 400px;
    background-color: white;
    display: flex; /* main-content를 flex 컨테이너로 지정 */
    flex-direction: row;
    justify-content: space-between; 
    padding: 30px;
    /* 
    flex-end : 오른쪽 , 
    justify-content
    space-around : flex-item들을 y축을 동일하게 비워줌.(abc가 있다면 a의 양옆+ b의 양옆)
    space-between : flex-item들 y축 사이를 비워줌.
    space-evenly : flex-item들의 y축을 동일하게 비워줌2. (abc가 있다면 a,b,c 사이를 완전 동일하게 해줌 단 익스플로러지원x)
    */
}
.group1{
    flex-basis: 250px;
    /* flex-grow: 2;
    flex-shrink: 1; */
/*    flex: 50px 2 1;  */
}
.group2{
    flex-basis: 380px;
    /* flex-grow: 1; */
}
.group3{
    flex-basis: 190px;
    /* flex-grow: 2; */
}
/**/
.login{
    background: #f7aa2e radial-gradient(circle at right top, #f4c730, #f7aa2e);
    border-radius: 5px;
    padding: 10px;
    box-shadow: 5px 5px 0 0 #666;
}
.login-heading{
    margin: 0px;
    text-indent: 10px; /*첫 줄 들여쓰기. 콘텐트에 영향을 주지않는다.*/
    background-color: pink;
    font-size : 1.5rem;
    color: yellow;
}
.login-form{
    margin-top : 10px;
    background-color: white;
    border-radius: 5px 5px 0 0 ;
    padding : 10px 10px 0 10px;
}
.login-form fieldset{
    position: relative;
    border: 0;
    border-bottom:  1px solid #aaa;
    padding : 0 0 10px 0;
} 
.login-form input{
    width : 95px;
    height : 24px;
    border : 1px solid #aaa;
    padding : 1px 1px 1px 5px;
}
.user-pw {
    margin-top : 5px;
}
.btn-login{
    position: absolute;
    top : 0;
    right : 0;
    width:  50px;
    height: 50px;
    border : 1px solid black;
    background-color: orange;
    padding : 0;
    color : white;
    border-radius: 3px;
    /* font : inherit -> Window 에서는 글꼴이 다를수도 있기 때문에 넣어둔다. */
}
.login-form label{
    width: 4em; /*4글자 만큼*/
    display: inline-block;
}
.sign{
    margin : 0;
    padding : 10px ;
    border-radius: 0 0 5px 5px;
    background-color: white;
    list-style : none;
    display: flex;
    justify-content: space-between;
}
.sign li::before{
    color: red;
}
.sign li{
    font-size: 1.3rem;
}
.validation-list{
    list-style: none;
    padding : 0;
    margin : 25px 0 20px 0; /*위쪽의 박스쉐도우 때문에 설정함*/
}
.validation-list li{
    margin : 10px 0;
}
.validation-list a{
    background : url('./images/validation_icon.png') no-repeat 20px 50%, linear-gradient(#ccc,#eee) repeat 0 0;
    display : block;
    border : 1px solid #aaa;
    border-radius: 30px;
    padding : 8px 0 8px 45px;
}
.term{
    background :#ccc linear-gradient(#ccc, #eee);
    border : 1px solid #aaa;
    border-radius: 5px;
    padding : 10px 15px;
}
.term-heading{
    background-color: yellow;
    margin: 0;
    font-size : 1.5rem;
}
.term-list {
    background-color: yellow;
    margin: 10px 0 0 0 ;
}
.term-list::after {
    content:"";
    clear: both; 
    display: block;
}
.term-list-thumbnail, .term-list-brief{
    margin: 0px;
}
.term-list-subject, .term-list-brief{
    background-color:pink;
    float : right;
    width : 145px;
}
.term-list-subject{
    margin: -5px 0 5px 0;
}
.term-list-thumbnail {
    float : left;
    background-color: lime;
}
.term-list-thumbnail img{
    vertical-align: top; /* inline 객체에 주는 속성 */
}
.term-list-brief{
    line-height: 1.5em;
}
.slogan{
    background-color: orange;
    padding: 15px 0;
}
.footer-bg{
    background-color: silver;
    padding: 15px 0;
}
.footer{
    background-color: yellow;
}